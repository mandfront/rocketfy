{"ast":null,"code":"var _jsxFileName = \"/Users/Karine/rocketfy/src/components/Board/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport context from './context';\nimport { loadLists } from '../../services/api';\nimport List from '../List';\nimport { Container } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = loadLists();\nexport default function Board() {\n  _s();\n\n  const [lists, setLists] = useState(data);\n\n  function move(from, to) {}\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: lists.map(list => /*#__PURE__*/_jsxDEV(List, {\n      data: list\n    }, list.titile, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"tcYI8ZIZcZb5K4M5mhC/llFWkeI=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/Karine/rocketfy/src/components/Board/index.js"],"names":["React","useState","context","loadLists","List","Container","data","Board","lists","setLists","move","from","to","map","list","titile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,IAAI,GAAGH,SAAS,EAAtB;AAEA,eAAe,SAASI,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,IAAD,CAAlC;;AAEA,WAASI,IAAT,CAAcC,IAAd,EAAoBC,EAApB,EAAwB,CAAE;;AAE1B,sBACE,QAAC,SAAD;AAAA,cACGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAWA,IAAI,CAACC,MAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZuBR,K;;KAAAA,K","sourcesContent":["import React, { useState } from 'react'\nimport context from './context'\nimport { loadLists } from '../../services/api'\n\nimport List from '../List'\n\nimport { Container } from './styles'\n\nconst data = loadLists()\n\nexport default function Board() {\n  const [lists, setLists] = useState(data)\n\n  function move(from, to) {}\n\n  return (\n    <Container>\n      {lists.map(list => (\n        <List key={list.titile} data={list} />\n      ))}\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}